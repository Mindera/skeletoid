apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'jacoco'

android {
    compileSdkVersion rootProject.compileSdkVersion

    testBuildType "qa"

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion

        consumerProguardFiles 'proguard-rules.pro'
    }

    buildTypes {
        debug {
        }

        qa {
            matchingFallbacks = ['debug']
            testCoverageEnabled = true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        // set to true to turn off analysis progress reporting by lint
        quiet true

        // if true, stop the gradle build if errors are found
        abortOnError false

        // do not ignore warnings
        warningsAsErrors true
    }

    configurations.all {
        resolutionStrategy {
            resolutionStrategy.force "com.google.guava:guava:$guavaVersion"
            resolutionStrategy.force "com.google.code.findbugs:jsr305:$findBugsVersion"

            // fail eagerly on version conflict (includes transitive dependencies)
            // e.g. multiple different versions of the same dependency (group and name are equal)
            failOnVersionConflict()
        }
    }
}

dependencies {
    //Depends on Base RxJava
    api project(path: ':rxjava')

    implementation ("com.jakewharton.rxbinding3:rxbinding:$rxBindingsVersion") {
        exclude group: 'io.reactivex.rxjava2', module: 'rxandroid'
        exclude group: 'io.reactivex.rxjava2', module: 'rxjava'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    }
    implementation ("com.jakewharton.rxbinding3:rxbinding-core:$rxBindingsVersion") {
        exclude group: 'com.jakewharton.rxbinding3', module: 'rxbinding'
        exclude group: 'io.reactivex.rxjava2', module: 'rxjava'
        exclude group: 'io.reactivex.rxjava2', module: 'rxandroid'
        exclude group: 'androidx.core', module: 'core'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    }
    implementation ("com.jakewharton.rxbinding3:rxbinding-appcompat:$rxBindingsVersion") {
        exclude group: 'com.jakewharton.rxbinding3', module: 'rxbinding'
        exclude group: 'androidx.appcompat', module: 'appcompat'
        exclude group: 'io.reactivex.rxjava2', module: 'rxandroid'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    }
    implementation ("com.jakewharton.rxbinding3:rxbinding-drawerlayout:$rxBindingsVersion") {
        exclude group: 'com.jakewharton.rxbinding3', module: 'rxbinding'
        exclude group: 'io.reactivex.rxjava2', module: 'rxandroid'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    }
    implementation ("com.jakewharton.rxbinding3:rxbinding-leanback:$rxBindingsVersion") {
        exclude group: 'com.jakewharton.rxbinding3', module: 'rxbinding'
        exclude group: 'io.reactivex.rxjava2', module: 'rxandroid'
        exclude group: 'androidx.core', module: 'core'
        exclude group: 'androidx.recyclerview', module: 'recyclerview'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    }
    implementation ("com.jakewharton.rxbinding3:rxbinding-recyclerview:$rxBindingsVersion") {
        exclude group: 'com.jakewharton.rxbinding3', module: 'rxbinding'
        exclude group: 'io.reactivex.rxjava2', module: 'rxandroid'
        exclude group: 'androidx.recyclerview', module: 'recyclerview'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    }
    implementation ("com.jakewharton.rxbinding3:rxbinding-slidingpanelayout:$rxBindingsVersion") {
        exclude group: 'com.jakewharton.rxbinding3', module: 'rxbinding'
        exclude group: 'io.reactivex.rxjava2', module: 'rxandroid'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    }
    implementation ("com.jakewharton.rxbinding3:rxbinding-swiperefreshlayout:$rxBindingsVersion") {
        exclude group: 'com.jakewharton.rxbinding3', module: 'rxbinding'
        exclude group: 'io.reactivex.rxjava2', module: 'rxandroid'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    }
    implementation ("com.jakewharton.rxbinding3:rxbinding-viewpager:$rxBindingsVersion") {
        exclude group: 'com.jakewharton.rxbinding3', module: 'rxbinding'
        exclude group: 'io.reactivex.rxjava2', module: 'rxandroid'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    }
    implementation ("com.jakewharton.rxbinding3:rxbinding-material:$rxBindingsVersion") {
        exclude group: 'com.jakewharton.rxbinding3', module: 'rxbinding'
        exclude group: 'io.reactivex.rxjava2', module: 'rxandroid'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
        exclude group: 'androidx.core', module:'core'
        exclude group: 'androidx.appcompat', module: 'appcompat'
        exclude group: 'androidx.vectordrawable', module: 'vectordrawable'
    }

    // jakewharton'' libs use version 27.0.2 and we use 27.1.1, so we need to remove those.
    // we also need to guarantee that any project using this lib will not crash due to the lack
    // of these libs, so we should reference them here. But our project will not crash even
    // without these
    implementation("androidx.recyclerview:recyclerview:$recyclerViewVersion") {
        exclude group: 'androidx.core', module: 'core'
    }

    implementation ("androidx.loader:loader:$loaderVersion") {
        exclude group: 'androidx.annotation', module: 'annotation'
        exclude group: 'androidx.core', module:'core'
    }

    implementation ("androidx.vectordrawable:vectordrawable-animated:$vectorDrawableVersion") {
        exclude group: 'androidx.vectordrawable', module: 'vectordrawable'
    }

    implementation ("androidx.legacy:legacy-support-core-utils:$androidLegacyVersion") {
        exclude group: 'android.loader', module: 'loader'
        exclude group: 'androidx.annotation', module: 'annotation'
        exclude group: 'androidx.core', module:'core'
    }

    implementation ("androidx.appcompat:appcompat:$appcompatVersion") {
        exclude group: 'androidx.vectordrawable', module: 'vectordrawable-animated'
        exclude group: 'androidx.annotation', module: 'annotation'
        exclude group: 'androidx.core', module:'core'
    }

    implementation("com.google.android.material:material:$materialVersion") {
        exclude group: 'androidx.appcompat', module: 'appcompat'
        exclude group: 'androidx.core', module: 'core'
    }
}

jacoco {
    toolVersion "0.8.1"
}

//Unit Test Coverage filtered - Note: This is currently NOT being used on the Codacy report. This is to run locally if needed
task createSkeletoidUnitTestReport(type: JacocoReport, dependsOn: ['testQaUnitTest']) {

    reports {
        html.enabled = true
    }

    def fileFilter = [
            //Android stuff
            '**/R.class',
            '**/BR.class',
            '**/R$*.class',
            '**/BR$*.class',
            '**/BuildConfig.*',
            'android/**/*.*',
            '**/Manifest*.*',
            //Data Binding
            '**/*databinding/**/*.*',
            //Test
            '**/**Test*.*']

    //To support Java coverage on Unit tests
    def debugTree = fileTree(dir: "${buildDir}/intermediates/javac/qa/compileQaJavaWithJavac/classes", excludes: fileFilter)
    //To support Kotlin coverage on Unit tests
    def kotlinDebugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/qaUnitTest", excludes: fileFilter)

    def mainSrc = "${project.projectDir}/src/main/java"
    def debugSrc = "${project.projectDir}/src/debug/java"

    sourceDirectories = files([mainSrc, debugSrc])


    classDirectories = files([debugTree], [kotlinDebugTree])
    executionData = files("${buildDir}/jacoco/testQaUnitTest.exec")
}
