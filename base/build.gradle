apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    testBuildType "qa"

    defaultConfig {

        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion

    }

    buildTypes {

        debug {
            matchingFallbacks = ['debug']
        }

        qa {
            matchingFallbacks = ['debug']
            testCoverageEnabled = true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        // set to true to turn off analysis progress reporting by lint
        quiet true

        // if true, stop the gradle build if errors are found
        abortOnError false

        // do not ignore warnings
        warningsAsErrors true
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }

    configurations {
        childTestDependencies.extendsFrom testImplementation
    }
}

dependencies {
    implementation project(path: ':kt-extensions')

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

    api "androidx.annotation:annotation:$appcompatVersion"

    implementation("androidx.loader:loader:$loaderVersion")

    implementation("androidx.vectordrawable:vectordrawable-animated:$vectorDrawableVersion")

    implementation("androidx.legacy:legacy-support-core-utils:$androidLegacyVersion")

    implementation("androidx.appcompat:appcompat:$appcompatVersion")

    api "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    api("io.reactivex.rxjava2:rxandroid:$rxAndroidVersion")

    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"

    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$rootProject.kotlinVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "androidx.test:core:$androidCoreTest"

    testImplementation("org.powermock:powermock-module-junit4:$powermockVersion")
    testImplementation("org.powermock:powermock-module-junit4-rule:$powermockVersion")

    testImplementation("org.powermock:powermock-api-mockito2:$powermockVersion")
    testImplementation "org.powermock:powermock-classloading-xstream:$powermockVersion"
    testImplementation("org.robolectric:robolectric:$robolectricVersion")
}

apply from: "../jacoco.gradle"
apply from: "../jacoco_global.gradle"