apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    testBuildType "qa"

    defaultConfig {

        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion

    }

    buildTypes {

        debug {
            matchingFallbacks = ['debug']
        }

        qa {
            matchingFallbacks = ['debug']
            testCoverageEnabled = true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        // set to true to turn off analysis progress reporting by lint
        quiet true

        // if true, stop the gradle build if errors are found
        abortOnError false

        // do not ignore warnings
        warningsAsErrors true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    configurations {
        childTestDependencies.extendsFrom testImplementation
    }

    configurations.all {

        resolutionStrategy {
            resolutionStrategy.force "com.google.guava:guava:$guavaVersion"
            resolutionStrategy.force "com.google.code.findbugs:jsr305:$findBugsVersion"

            resolutionStrategy.force "org.objenesis:objenesis:$objenesisVersion"
            resolutionStrategy.force "net.bytebuddy:byte-buddy:$byteBuddyVersion"
            resolutionStrategy.force "net.bytebuddy:byte-buddy-agent:$byteBuddyVersion"

            // fail eagerly on version conflict (includes transitive dependencies)
            // e.g. multiple different versions of the same dependency (group and name are equal)
            failOnVersionConflict()
        }

        resolutionStrategy.force "org.codehaus.plexus:plexus-utils:$plexusVersion"
    }
}

dependencies {

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

    api "androidx.annotation:annotation:$appcompatVersion"

    implementation ("androidx.loader:loader:$loaderVersion") {
        exclude group: 'androidx.annotation', module: 'annotation'
        exclude group: 'androidx.core', module: 'core'
    }

    implementation ("androidx.vectordrawable:vectordrawable-animated:$vectorDrawableVersion") {
        exclude group: 'androidx.annotation', module: 'annotation'
        exclude group: 'androidx.vectordrawable', module: 'vectordrawable'
    }

    implementation ("androidx.legacy:legacy-support-core-utils:$androidLegacyVersion") {
        exclude group: 'android.loader', module: 'loader'
        exclude group: 'androidx.annotation', module: 'annotation'
        exclude group: 'androidx.core', module:'core'
    }

    implementation ("androidx.appcompat:appcompat:$appcompatVersion") {
        exclude group: 'androidx.vectordrawable', module: 'vectordrawable-animated'
        exclude group: 'androidx.annotation', module: 'annotation'
        exclude group: 'androidx.core', module:'core'
    }

    api "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    api ("io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"){
        exclude group: 'io.reactivex.rxjava2', module: 'rxjava'
    }

    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"

    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$rootProject.kotlinVersion"
    testImplementation ("org.mockito:mockito-core:$mockitoVersion")

    testImplementation ("org.powermock:powermock-module-junit4:$powermockVersion") {
        exclude group: 'org.mockito', module: 'mockito-core'
    }
    testImplementation ("org.powermock:powermock-module-junit4-rule:$powermockVersion")

    testImplementation ("org.powermock:powermock-api-mockito2:$powermockVersion") {
        exclude group: 'org.mockito', module: 'mockito-core'
    }
    testImplementation "org.powermock:powermock-classloading-xstream:$powermockVersion"
    testImplementation ("org.robolectric:robolectric:$robolectricVersion") {
        exclude group: 'androidx.annotation', module: 'annotation'
    }
}

apply from: "../jacoco.gradle"
apply from: "../jacoco_global.gradle"