apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply from: "../jacoco.gradle"

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    testBuildType "qa"

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        release.java.srcDirs += 'src/debug/kotlin'
        debug.java.srcDirs += 'src/debug/kotlin'
        qa.java.srcDirs += 'src/qa/kotlin'
    }

    buildTypes {

        debug {
            matchingFallbacks = ['debug']
        }

        qa {
            matchingFallbacks = ['debug']
            testCoverageEnabled = true
        }

        release {
            matchingFallbacks = ['debug']
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    configurations.all {
        resolutionStrategy {
            resolutionStrategy.force "com.google.guava:guava:$guavaVersion"
            resolutionStrategy.force "com.google.code.findbugs:jsr305:$findBugsVersion"

            resolutionStrategy.force "org.objenesis:objenesis:$objenesisVersion"
            resolutionStrategy.force "net.bytebuddy:byte-buddy:$byteBuddyVersion"
            resolutionStrategy.force "net.bytebuddy:byte-buddy-agent:$byteBuddyVersion"
            resolutionStrategy.force "org.codehaus.plexus:plexus-utils:$plexusVersion"

            // fail eagerly on version conflict (includes transitive dependencies)
            // e.g. multiple different versions of the same dependency (group and name are equal)
            failOnVersionConflict()
        }
    }

}

dependencies {
    //Depends on Base Skeletoid
    api project(path: ':base')
    testImplementation project(path: ':base', configuration: 'childTestDependencies')

    androidTestImplementation ("androidx.test:runner:$testRunnerVersion") {
        exclude group: 'androidx.annotation', module: 'annotation'
    }

    androidTestImplementation("androidx.test.espresso:espresso-core:$espressoVersion") {
        exclude group: 'androidx.annotation', module: 'annotation'
    }
}
